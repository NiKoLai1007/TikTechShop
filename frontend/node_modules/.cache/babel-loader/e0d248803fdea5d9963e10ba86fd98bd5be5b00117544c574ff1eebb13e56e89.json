{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TikTechShop\\\\frontend\\\\src\\\\Components\\\\Admin\\\\UsersList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport MetaData from '../Layout/Metadata';\nimport Loader from '../Layout/Loader';\nimport Sidebar from './SideBar';\nimport axios from 'axios';\nimport { getToken, successMsg, errMsg } from '../../utils/helpers';\nimport Toast from '../Layout/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [allUsers, setAllUsers] = useState([]);\n  const [isDeleted, setIsDeleted] = useState('');\n  let navigate = useNavigate();\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${getToken()}`\n    }\n  };\n  const listUsers = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`http//:localhost:4001/api/v1/admin/users`, config);\n      setAllUsers(data.users);\n      setLoading(false);\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  const deleteUser = async id => {\n    try {\n      const {\n        data\n      } = await axios.delete(`http//:localhost:4001/api/v1/admin/user/${id}`, config);\n      setIsDeleted(data.success);\n      setLoading(false);\n    } catch (error) {\n      setError(error.response.data.message);\n    }\n  };\n  useEffect(() => {\n    listUsers();\n    if (error) {\n      errMsg(error);\n      setError('');\n    }\n    if (isDeleted) {\n      successMsg('User deleted successfully');\n      navigate('/admin/users');\n    }\n  }, [error, isDeleted]);\n  const deleteUserHandler = id => {\n    deleteUser(id);\n  };\n  const setUsers = () => {\n    const data = {\n      columns: [{\n        label: 'User ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc'\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc'\n      }, {\n        label: 'Role',\n        field: 'role',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    allUsers.forEach(user => {\n      data.rows.push({\n        id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        actions: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/user/${user._id}`,\n            className: \"btn btn-primary py-1 px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger py-1 px-2 ml-2\",\n            onClick: () => deleteUserHandler(user._id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 26\n        }, this)\n      });\n    });\n    return data;\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'All Users'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-5\",\n            children: \"All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n            data: setUsers(),\n            className: \"px-3\",\n            bordered: true,\n            striped: true,\n            hover: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s(UsersList, \"mZNZBT1GHAIMSXpG4fjeyepXsbQ=\", false, function () {\n  return [useNavigate];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Link","useNavigate","MDBDataTable","toast","MetaData","Loader","Sidebar","axios","getToken","successMsg","errMsg","Toast","jsxDEV","_jsxDEV","UsersList","_s","loading","setLoading","error","setError","allUsers","setAllUsers","isDeleted","setIsDeleted","navigate","config","headers","listUsers","data","get","users","response","message","deleteUser","id","delete","success","deleteUserHandler","setUsers","columns","label","field","sort","rows","forEach","user","push","_id","name","email","role","actions","children","to","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","bordered","striped","hover","_c","$RefreshReg$"],"sources":["C:/Users/Admin/TikTechShop/frontend/src/Components/Admin/UsersList.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport MetaData from '../Layout/Metadata'\r\nimport Loader from '../Layout/Loader'\r\nimport Sidebar from './SideBar'\r\n\r\nimport axios from 'axios';\r\nimport { getToken, successMsg, errMsg } from '../../utils/helpers';\r\nimport Toast from '../Layout/Toast';\r\n\r\nconst UsersList = () => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [isDeleted, setIsDeleted] = useState('')\r\n    let navigate = useNavigate();\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json', \r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    }\r\n    const listUsers = async () => {\r\n        try {\r\n\r\n            const { data } = await axios.get(`http//:localhost:4001/api/v1/admin/users`, config)\r\n            setAllUsers(data.users)\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n            \r\n        }\r\n    }\r\n    const deleteUser = async (id) => {\r\n        try {\r\n            const { data } = await axios.delete(`http//:localhost:4001/api/v1/admin/user/${id}`, config)\r\n            setIsDeleted(data.success)\r\n            setLoading(false)\r\n            \r\n        } catch (error) {\r\n           setError(error.response.data.message)\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        listUsers();\r\n        if (error) {\r\n            errMsg(error);\r\n            setError('')\r\n        }\r\n        if (isDeleted) {\r\n            successMsg('User deleted successfully');\r\n            navigate('/admin/users');\r\n\r\n        }\r\n\r\n    }, [error, isDeleted,])\r\n\r\n\r\n    const deleteUserHandler = (id) => {\r\n       deleteUser(id)\r\n    }\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                   label: 'User ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n        allUsers.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n        return data;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Users'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Users</h1>\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setUsers()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UsersList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}