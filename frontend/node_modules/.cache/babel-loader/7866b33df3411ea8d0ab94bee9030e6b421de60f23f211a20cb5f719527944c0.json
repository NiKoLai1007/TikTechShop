{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\TikTechShop\\\\frontend\\\\src\\\\Components\\\\Route\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport Loader from '../Layout/Loader';\nimport { getUser } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  isAdmin = false\n}) => {\n  _s();\n  const [loading, setLoading] = useState(getUser() === false && false);\n  const [error, setError] = useState('');\n  const [user, setUser] = useState(getUser());\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  console.log(children.type.name, loading);\n  if (loading === false) {\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 20\n      }, this);\n    }\n    if (isAdmin === true && user.role !== 'admin') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }, this);\n    }\n    return children;\n  }\n  return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n_s(ProtectedRoute, \"L0m2z9jRUZumlwOCXJIR0JCAQIc=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useState","Navigate","Loader","getUser","jsxDEV","_jsxDEV","ProtectedRoute","children","isAdmin","_s","loading","setLoading","error","setError","user","setUser","isAuthenticated","setIsAuthenticated","console","log","type","name","to","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["C:/Users/Admin/TikTechShop/frontend/src/Components/Route/ProtectedRoute.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport Loader from '../Layout/Loader'\r\nimport { getUser } from '../../utils/helpers';\r\n\r\nconst ProtectedRoute = ({ children, isAdmin = false }) => {\r\n    const [loading, setLoading] = useState(getUser() === false && false )\r\n    const [error, setError] = useState('')\r\n    const [user, setUser] = useState(getUser())\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    console.log(children.type.name, loading)\r\n    \r\n    if (loading === false) {\r\n        if (!user) {\r\n            return <Navigate to='/login' />\r\n        }\r\n        if (isAdmin === true && user.role !== 'admin') {\r\n            return <Navigate to='/' />\r\n        }\r\n        return children\r\n    }\r\n    return <Loader />;\r\n\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAACG,OAAO,CAAC,CAAC,KAAK,KAAK,IAAI,KAAM,CAAC;EACrE,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7DkB,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAACa,IAAI,CAACC,IAAI,EAAEX,OAAO,CAAC;EAExC,IAAIA,OAAO,KAAK,KAAK,EAAE;IACnB,IAAI,CAACI,IAAI,EAAE;MACP,oBAAOT,OAAA,CAACJ,QAAQ;QAACqB,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACnC;IACA,IAAIlB,OAAO,KAAK,IAAI,IAAIM,IAAI,CAACa,IAAI,KAAK,OAAO,EAAE;MAC3C,oBAAOtB,OAAA,CAACJ,QAAQ;QAACqB,EAAE,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC9B;IACA,OAAOnB,QAAQ;EACnB;EACA,oBAAOF,OAAA,CAACH,MAAM;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErB,CAAC;AAACjB,EAAA,CAlBIH,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}