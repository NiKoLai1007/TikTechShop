[{"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\App.js":"2","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Home.js":"3","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Product\\ProductDetails.js":"4","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\Register.js":"5","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\Profile.js":"6","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\Login.js":"7","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\UpdateProfile.js":"8","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\ForgotPassword.js":"9","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\NewPassword.js":"10","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\UpdatePassword.js":"11","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Header.js":"12","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Footer.js":"13","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\Cart.js":"14","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\Shipping.js":"15","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\ConfirmOrder.js":"16","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\Payment.js":"17","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\OrderSuccess.js":"18","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Order\\ListOrders.js":"19","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Order\\OrderDetails.js":"20","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Route\\ProtectedRoute.js":"21","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\NewProduct.js":"22","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\Dashboard.js":"23","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\UpdateProduct.js":"24","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\ProductsList.js":"25","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\OrdersList.js":"26","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\ProcessOrder.js":"27","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\UsersList.js":"28","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\UpdateUser.js":"29","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\ProductReviews.js":"30","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Metadata.js":"31","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Loader.js":"32","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Product\\Product.js":"33","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\utils\\helpers.js":"34","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\CheckoutSteps.js":"35","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Review\\ListReviews.js":"36","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Search.js":"37","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\SideBar.js":"38","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Toast.js":"39","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\MonthlySalesChart.js":"40","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\ProductSalesChart.js":"41","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\UserSalesChart.js":"42","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\dashboard\\Header.js":"43"},{"size":281,"mtime":1700751211874,"results":"44","hashOfConfig":"45"},{"size":6830,"mtime":1700751211760,"results":"46","hashOfConfig":"45"},{"size":9019,"mtime":1700752011786,"results":"47","hashOfConfig":"45"},{"size":10480,"mtime":1700751211822,"results":"48","hashOfConfig":"45"},{"size":6818,"mtime":1700840267150,"results":"49","hashOfConfig":"45"},{"size":3237,"mtime":1700751211862,"results":"50","hashOfConfig":"45"},{"size":4855,"mtime":1700840149287,"results":"51","hashOfConfig":"45"},{"size":6296,"mtime":1700751211873,"results":"52","hashOfConfig":"45"},{"size":2640,"mtime":1700751211858,"results":"53","hashOfConfig":"45"},{"size":3501,"mtime":1700751211861,"results":"54","hashOfConfig":"45"},{"size":3511,"mtime":1700751211864,"results":"55","hashOfConfig":"45"},{"size":4789,"mtime":1700832680528,"results":"56","hashOfConfig":"45"},{"size":2461,"mtime":1700751211797,"results":"57","hashOfConfig":"45"},{"size":4631,"mtime":1700751211785,"results":"58","hashOfConfig":"45"},{"size":4785,"mtime":1700751211793,"results":"59","hashOfConfig":"45"},{"size":3838,"mtime":1700751211787,"results":"60","hashOfConfig":"45"},{"size":4117,"mtime":1700751211791,"results":"61","hashOfConfig":"45"},{"size":928,"mtime":1700751211790,"results":"62","hashOfConfig":"45"},{"size":3385,"mtime":1700751211818,"results":"63","hashOfConfig":"45"},{"size":4406,"mtime":1700751211819,"results":"64","hashOfConfig":"45"},{"size":834,"mtime":1700751211856,"results":"65","hashOfConfig":"45"},{"size":8981,"mtime":1700751211768,"results":"66","hashOfConfig":"45"},{"size":7024,"mtime":1700840530404,"results":"67","hashOfConfig":"45"},{"size":8927,"mtime":1700751211780,"results":"68","hashOfConfig":"45"},{"size":5299,"mtime":1700756570774,"results":"69","hashOfConfig":"45"},{"size":5075,"mtime":1700751211769,"results":"70","hashOfConfig":"45"},{"size":7613,"mtime":1700751211770,"results":"71","hashOfConfig":"45"},{"size":4396,"mtime":1700751211783,"results":"72","hashOfConfig":"45"},{"size":5433,"mtime":1700751211781,"results":"73","hashOfConfig":"45"},{"size":6234,"mtime":1700751211776,"results":"74","hashOfConfig":"45"},{"size":241,"mtime":1700751211801,"results":"75","hashOfConfig":"45"},{"size":141,"mtime":1700751211799,"results":"76","hashOfConfig":"45"},{"size":1234,"mtime":1700751211821,"results":"77","hashOfConfig":"45"},{"size":1376,"mtime":1700751211875,"results":"78","hashOfConfig":"45"},{"size":1884,"mtime":1700751211786,"results":"79","hashOfConfig":"45"},{"size":757,"mtime":1700751211824,"results":"80","hashOfConfig":"45"},{"size":1163,"mtime":1700751211802,"results":"81","hashOfConfig":"45"},{"size":1686,"mtime":1700757464841,"results":"82","hashOfConfig":"45"},{"size":878,"mtime":1700751211803,"results":"83","hashOfConfig":"45"},{"size":1607,"mtime":1700751211765,"results":"84","hashOfConfig":"45"},{"size":3084,"mtime":1700751211777,"results":"85","hashOfConfig":"45"},{"size":1961,"mtime":1700751211782,"results":"86","hashOfConfig":"45"},{"size":614,"mtime":1700755899224,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"1g38ht2",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"91"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"91"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"91"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"91"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"91"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"91"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"91"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"91"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"91"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"91"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"91"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"91"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"91"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"91"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"91"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"91"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"91"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"91"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"91"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"91"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\index.js",[],[],["245","246","247","248","249","250"],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\App.js",["251"],[],"import React, { useState } from 'react'\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Header from './Components/Layout/Header'\r\nimport Footer from './Components/Layout/Footer'\r\nimport Home from './Components/Home'\r\nimport ProductDetails from './Components/Product/ProductDetails'\r\nimport Login from './Components/User/Login'\r\nimport Register from './Components/User/Register';\r\nimport Profile from './Components/User/Profile'\r\nimport UpdateProfile from './Components/User/UpdateProfile';\r\nimport ForgotPassword from './Components/User/ForgotPassword';\r\nimport NewPassword from './Components/User/NewPassword';\r\nimport UpdatePassword from './Components/User/UpdatePassword';\r\nimport Cart from './Components/Cart/Cart';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from 'axios';\r\nimport Shipping from './Components/Cart/Shipping';\r\nimport ConfirmOrder from './Components/Cart/ConfirmOrder';\r\nimport Payment from './Components/Cart/Payment';\r\nimport OrderSuccess from './Components/Cart/OrderSuccess';\r\nimport ListOrders from './Components/Order/ListOrders';\r\nimport OrderDetails from './Components/Order/OrderDetails';\r\nimport Dashboard from './Components/Admin/Dashboard';\r\nimport NewProduct from './Components/Admin/NewProduct';\r\nimport ProductsList from './Components/Admin/ProductsList';\r\nimport UpdateProduct from './Components/Admin/UpdateProduct';\r\nimport OrdersList from './Components/Admin/OrdersList';\r\nimport ProcessOrder from './Components/Admin/ProcessOrder';\r\nimport UsersList from './Components/Admin/UsersList';\r\nimport UpdateUser from './Components/Admin/UpdateUser';\r\nimport ProtectedRoute from './Components/Route/ProtectedRoute';\r\nimport ProductReviews from './Components/Admin/ProductReviews';\r\nfunction App() {\r\n  const [state, setState] = useState({\r\n    cartItems: localStorage.getItem('cartItems')\r\n      ? JSON.parse(localStorage.getItem('cartItems'))\r\n      : [],\r\n    shippingInfo: localStorage.getItem('shippingInfo')\r\n      ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n      : {},\r\n  })\r\n  const addItemToCart = async (id, quantity) => {\r\n    console.log(id, quantity)\r\n    try {\r\n      const { data } = await axios.get(`http://localhost:4001/api/v1/product/${id}`)\r\n      const item = {\r\n        product: data.product._id,\r\n        name: data.product.name,\r\n        price: data.product.price,\r\n        image: data.product.images[0].url,\r\n        stock: data.product.stock,\r\n        quantity: quantity\r\n      }\r\n\r\n      const isItemExist = state.cartItems.find(i => i.product === item.product)\r\n      console.log(isItemExist, state)\r\n      // setState({\r\n      //   ...state,\r\n      //   cartItems: [...state.cartItems, item]\r\n      // })\r\n      if (isItemExist) {\r\n        setState({\r\n          ...state,\r\n          cartItems: state.cartItems.map(i => i.product === isItemExist.product ? item : i)\r\n        })\r\n      }\r\n      else {\r\n        setState({\r\n          ...state,\r\n          cartItems: [...state.cartItems, item]\r\n        })\r\n      }\r\n\r\n      toast.success('Item Added to Cart', {\r\n        position: toast.POSITION.BOTTOM_RIGHT\r\n      })\r\n\r\n    } catch (error) {\r\n      toast.error(error, {\r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      // navigate('/')\r\n    }\r\n\r\n  }\r\n\r\n  const removeItemFromCart = async (id) => {\r\n    setState({\r\n      ...state,\r\n      cartItems: state.cartItems.filter(i => i.product !== id)\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(state.cartItems))\r\n  }\r\n\r\n  const saveShippingInfo = async (data) => {\r\n    setState({\r\n      ...state,\r\n      shippingInfo: data\r\n    })\r\n    localStorage.setItem('shippingInfo', JSON.stringify(data))\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header cartItems={state.cartItems} />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} exact=\"true\" />\r\n          <Route path=\"/product/:id\" element={<ProductDetails cartItems={state.cartItems} addItemToCart={addItemToCart} />} exact=\"true\" />\r\n          <Route path=\"/search/:keyword\" element={<Home />} exact=\"true\" />\r\n\r\n          <Route path=\"/login\" element={<Login />} exact=\"true\" />\r\n          <Route path=\"/register\" element={<Register />} exact=\"true\" />\r\n          <Route path=\"/me\" element={<Profile />} exact=\"true\" />\r\n          <Route path=\"/me/update\" element={<UpdateProfile />} exact=\"true\"\r\n          />\r\n          <Route path=\"/password/forgot\" element={<ForgotPassword />} exact=\"true\" />\r\n          <Route path=\"/password/reset/:token\" element={<NewPassword />} exact=\"true\" />\r\n          <Route path=\"/password/update\" element={<UpdatePassword />} />\r\n\r\n          <Route path=\"/cart\" element={<Cart cartItems={state.cartItems} addItemToCart={addItemToCart} removeItemFromCart={removeItemFromCart} />} exact=\"true\" />\r\n          <Route path=\"/shipping\" element={<Shipping\r\n            shipping={state.shippingInfo}\r\n            saveShippingInfo={saveShippingInfo}\r\n          />}\r\n          />\r\n          <Route path=\"/confirm\" element={<ConfirmOrder cartItems={state.cartItems} shippingInfo={state.shippingInfo} />} />\r\n          <Route path=\"/payment\" element={<Payment cartItems={state.cartItems} shippingInfo={state.shippingInfo} />} />\r\n          <Route path=\"/success\" element={<OrderSuccess />} />\r\n          <Route path=\"/orders/me\" element={<ListOrders />} />\r\n          <Route path=\"/order/:id\" element={<OrderDetails />} />\r\n\r\n          {/* <Route path=\"/dashboard\" element={<Dashboard />} /> */}\r\n          <Route path=\"/admin/product\" element={<NewProduct />} />\r\n          \r\n          <Route\r\n            path=\"/admin/product/:id\"\r\n            element={<UpdateProduct />} />\r\n          <Route\r\n            path=\"/admin/orders\"\r\n            element={<OrdersList />}\r\n          />\r\n          <Route\r\n            path=\"/admin/order/:id\"\r\n            element={<ProcessOrder />} />\r\n          <Route\r\n            path=\"/admin/users\"\r\n            element={<UsersList />} />\r\n          <Route path=\"/admin/user/:id\" element={<UpdateUser />} />\r\n          <Route\r\n            path=\"/dashboard\"\r\n            element={\r\n              <ProtectedRoute isAdmin={true}>\r\n                <Dashboard />\r\n              </ProtectedRoute>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/admin/products\"\r\n            element={\r\n              <ProtectedRoute isAdmin={true}>\r\n                <ProductsList />\r\n              </ProtectedRoute>\r\n            }\r\n          />\r\n          <Route\r\n          path=\"/admin/reviews\"\r\n          element={\r\n            <ProtectedRoute isAdmin={true} >\r\n              <ProductReviews />\r\n            </ProtectedRoute>} />\r\n        </Routes>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Home.js",["252","253","254","255","256"],[],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport MetaData from './Layout/Metadata'\r\nimport axios from 'axios';\r\n\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nimport Product from './Product/Product';\r\nimport Loader from './Layout/Loader'\r\nimport Pagination from 'react-js-pagination'\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport Header from './Layout/Header';\r\n\r\n\r\n\r\nconst categories = [\r\n    'Electronics',\r\n    'Cameras',\r\n    'Laptops',\r\n    'Accessories',\r\n    'Headphones',\r\n    'Food',\r\n    \"Books\",\r\n    'Clothes/Shoes',\r\n    'Beauty/Health',\r\n    'Sports',\r\n    'Outdoor',\r\n    'Home'\r\n]\r\nconst Home = () => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [products, setProducts] = useState([])\r\n    const [error, setError] = useState()\r\n    const [productsCount, setProductsCount] = useState(0)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [resPerPage, setResPerPage] = useState(0)\r\n    const [filteredProductsCount, setFilteredProductsCount] = useState(0)\r\n    const [price, setPrice] = useState([1, 1000]);\r\n    const [category, setCategory] = useState('');\r\n    let { keyword } = useParams();\r\n\r\n    const createSliderWithTooltip = Slider.createSliderWithTooltip;\r\n    const Range = createSliderWithTooltip(Slider.Range);\r\n\r\n    const getProducts = async (currentPage = 1, keyword = '', price, category = '') => {\r\n        let link = `http://localhost:4001/api/v1/products?page=${currentPage}&keyword=${keyword}&price[lte]=${price[1]}&price[gte]=${price[0]}`\r\n\r\n        if (category) {\r\n            link = `http://localhost:4001/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}`\r\n        }\r\n        console.log(link)\r\n        let res = await axios.get(link)\r\n        console.log(res)\r\n        setProducts(res.data.products)\r\n        setResPerPage(res.data.resPerPage)\r\n        setProductsCount(res.data.productsCount)\r\n        setFilteredProductsCount(res.data.filteredProductsCount)\r\n        setLoading(false)\r\n\r\n    }\r\n    let count = productsCount;\r\n\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    const loadUser = async () => {\r\n        try {\r\n            \r\n            const { data } = await axios.get('/api/v1/me')\r\n    \r\n        } catch (error) {\r\n            console.log( error.response.data.message)\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProducts(currentPage, keyword, price, category)\r\n    }, [currentPage, keyword, price, category])\r\n   \r\n    return (\r\n        <>\r\n            {loading ? <Loader /> : (<Fragment>\r\n                <MetaData title={'Buy Best Products Online'} />\r\n                \r\n                <div className=\"container container-fluid\">\r\n                <section id=\"carousel\" className=\"mt-5\">\r\n                    <Carousel>\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src=\"/images/images1.png\"\r\n                                alt=\"First slide\"\r\n                                style={{ height: '400px' }}\r\n                            />\r\n                            <Carousel.Caption style={{ color: 'black' }}>\r\n                                <h3>Electronics</h3>\r\n                                <p>The best Electronics 2023: top watch handsets ranked</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src=\"/images/images2.png\"\r\n                                alt=\"Second slide\"\r\n                                style={{ height: '400px' }}\r\n                            />\r\n                            <Carousel.Caption style={{ color: 'black' }}>\r\n                                <h3>Best Sales</h3>\r\n                                <p>Check out the latest sales 2023</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </section>\r\n                    <h1 id=\"products_heading\">Latest Products</h1>\r\n\r\n                    <section id=\"products\" className=\"container mt-5\">\r\n\r\n                        <div className=\"row\">\r\n                            {keyword ? (\r\n                                <Fragment>\r\n                                    <div className=\"col-6 col-md-3 mt-5 mb-5\">\r\n                                        <div className=\"px-5\">\r\n                                            <Range\r\n                                                marks={{\r\n                                                    1: `$1`,\r\n                                                    1000: `$1000`\r\n                                                }}\r\n                                                min={1}\r\n                                                max={1000}\r\n                                                defaultValue={[1, 1000]}\r\n                                                tipFormatter={value => `$${value}`}\r\n                                                tipProps={{\r\n                                                    placement: \"top\",\r\n                                                    visible: true\r\n                                                }}\r\n                                                value={price}\r\n                                                onChange={price => setPrice(price)}\r\n                                            />\r\n                                            <hr className=\"my-5\" />\r\n                                            <div className=\"mt-5\">\r\n                                                <h4 className=\"mb-3\">\r\n                                                    Categories\r\n                                                </h4>\r\n                                                <ul className=\"pl-0\">\r\n                                                    {categories.map(category => (\r\n                                                        <li\r\n                                                            style={{\r\n                                                                cursor: 'pointer',\r\n                                                                listStyleType: 'none'\r\n                                                            }}\r\n                                                            key={category}\r\n                                                            onClick={() => setCategory(category)}\r\n                                                        >\r\n                                                            {category}\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-md-9\">\r\n                                        <div className=\"row\">\r\n                                            {products.map(product => (\r\n                                                <Product key={product._id} product={product} col={4} />\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            ) : (\r\n                                products.map(product => (\r\n                                    <Product key={product._id} product={product} col={3} />\r\n                                ))\r\n                            )}\r\n\r\n                        </div>\r\n                    </section>\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5\">\r\n                            <Pagination\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={productsCount}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>)}\r\n                </div>\r\n            </Fragment>\r\n            )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Product\\ProductDetails.js",["257"],[],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nimport Loader from '../Layout/Loader'\r\nimport MetaData from '../Layout/Metadata'\r\nimport { getUser, getToken, successMsg, errMsg } from '../../utils/helpers'\r\nimport ListReviews from '../Review/ListReviews'\r\n// import { useAlert} from '@blaumaus/react-alert'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst ProductDetails = ({ addItemToCart, cartItems }) => {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [product, setProduct] = useState({})\r\n    const [error, setError] = useState('')\r\n    const [quantity, setQuantity] = useState(0)\r\n    const [user, setUser] = useState(getUser())\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const [errorReview, setErrorReview] = useState('');\r\n    const [success, setSuccess] = useState('')\r\n\r\n\r\n    let { id } = useParams()\r\n    // const alert = useAlert();\r\n\r\n    const productDetails = async (id) => {\r\n        let link = `http://localhost:4001/api/v1/product/${id}`\r\n        console.log(link)\r\n        let res = await axios.get(link)\r\n        console.log(res)\r\n        if (!res)\r\n            setError('Product not found')\r\n        setProduct(res.data.product)\r\n        setLoading(false)\r\n    }\r\n\r\n    const increaseQty = () => {\r\n        const count = document.querySelector('.count')\r\n        if (count.valueAsNumber >= product.stock) return;\r\n        const qty = count.valueAsNumber + 1;\r\n        setQuantity(qty)\r\n    }\r\n\r\n    const decreaseQty = () => {\r\n        const count = document.querySelector('.count')\r\n        if (count.valueAsNumber <= 1) return;\r\n        const qty = count.valueAsNumber - 1;\r\n        setQuantity(qty)\r\n    }\r\n    const addToCart = async () => {\r\n        await addItemToCart(id, quantity);\r\n    }\r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n                        setRating(this.starValue)\r\n                    } else {\r\n                        star.classList.remove('orange')\r\n                    }\r\n                }\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                }\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const newReview = async (reviewData) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.put(`http://localhost:4001/api/v1/review`, reviewData, config)\r\n            setSuccess(data.success)\r\n\r\n        } catch (error) {\r\n            setErrorReview(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    const reviewHandler = () => {\r\n        const formData = new FormData();\r\n        formData.set('rating', rating);\r\n        formData.set('comment', comment);\r\n        formData.set('productId', id);\r\n        newReview(formData)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        productDetails(id)\r\n        if (errorReview) {\r\n            errMsg(errorReview)\r\n            setErrorReview('')\r\n        }\r\n        if (success) {\r\n            successMsg('Review posted successfully')\r\n            setSuccess(false)\r\n\r\n        }\r\n    }, [id, error, errorReview, success]);\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(cartItems))\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={product.name} />\r\n                    <div className=\"row d-flex justify-content-around\">\r\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n                            <Carousel pause='hover'>\r\n                                {product.images && product.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={product.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-5 mt-5\">\r\n                            <h3>{product.name}</h3>\r\n                            <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"rating-outer\">\r\n                                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                            </div>\r\n                            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n                            <hr />\r\n\r\n                            <p id=\"product_price\">${product.price}</p>\r\n                            <div className=\"stockCounter d-inline\">\r\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty} >-</span>\r\n\r\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\r\n                                {/* <span className=\"btn btn-primary plus\"> +</span> */}\r\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\r\n                            </div>\r\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button>\r\n\r\n                            <hr />\r\n\r\n                            <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'} >{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Description:</h4>\r\n                            <p>{product.description}</p>\r\n                            <hr />\r\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\r\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings} >\r\n                                Submit Your Review\r\n                            </button> :\r\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>}\r\n                            <div className=\"row mt-2 mb-5\">\r\n                                <div className=\"rating w-50\">\r\n\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n\r\n                                                    <ul className=\"stars\" >\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                    </ul>\r\n\r\n                                                    <textarea\r\n                                                        name=\"review\"\r\n                                                        id=\"review\" className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    >\r\n                                                    </textarea>\r\n\r\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={reviewHandler}>Submit</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            {product.reviews && product.reviews.length > 0 && (\r\n\r\n                                <ListReviews reviews={product.reviews} />\r\n\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n\r\n}\r\nexport default ProductDetails","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\Register.js",["258","259","260","261"],[],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Metadata from '../Layout/Metadata'\r\nimport axios from 'axios'\r\n\r\nconst Register = () => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { name, email, password } = user;\r\n\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n   \r\n\r\n    let navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            navigate('/')\r\n        }\r\n        if (error) {\r\n            console.log(error)\r\n           setError()\r\n        }\r\n\r\n    }, [error. isAuthenticated, navigate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n\r\n        register(formData)\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n\r\n        } else {\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    const register = async (userData) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post(`http://localhost:4001/api/v1/register`, userData, config)\r\n            console.log(data.user)\r\n            setIsAuthenticated(true)\r\n            setLoading(false)\r\n            setUser(data.user)\r\n            navigate('/')\r\n\r\n        } catch (error) {\r\n            setIsAuthenticated(false)\r\n            setLoading(false)\r\n            setUser(null)\r\n            setError(error.response.data.message)\r\n            console.log(error.response.data.message)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <Metadata title={'Register User'} />\r\n\r\n            <div className=\"row wrapper justify-content-center\">\r\n                        <div className=\"col-12 col-md-5\">\r\n                           <img\r\n                               src=\"images/loginpic2.png\"\r\n                               alt=\"Your Image\"\r\n                               className=\"img-fluid\"\r\n                               style={{  height: '450px' }}\r\n                           />\r\n                       </div>\r\n                <div className=\"col-12 col-md-4\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mb-3\">Register</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                name='password'\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept=\"images/*\"\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"register_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            // disabled={loading ? false : true}\r\n                        >\r\n                            REGISTER\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register",["262","263","264","265","266","267"],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\Profile.js",["268"],[],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../Layout/Loader'\r\nimport MetaData from '../Layout/Metadata'\r\nimport { getUser, } from '../../utils/helpers';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getToken } from '../../utils/helpers';\r\n\r\nconst Profile = () => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [user, setUser] = useState('')\r\n    \r\n\r\n    const getProfile = async () => {\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${getToken()}`\r\n            }\r\n        }\r\n        try {\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/me`, config)\r\n            console.log(data)\r\n            setUser(data.user)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error(\"invalid user or password\", {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n        }\r\n\r\n    }\r\n    // const getUserToken = async () => {\r\n    //     const userToken = getToken()\r\n    //     console.log(userToken)\r\n    //     setToken(userToken)\r\n    // }\r\n    useEffect(() => {\r\n        // getUserToken()\r\n        getProfile()\r\n\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Your Profile'} />\r\n\r\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\r\n                    <div className=\"row justify-content-around mt-5 user-info\">\r\n                        <div className=\"col-12 col-md-3\">\r\n                            <figure className='avatar avatar-profile'>\r\n                                <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\r\n                            </figure>\r\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\r\n                                Edit Profile\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <h4>Full Name</h4>\r\n                            <p>{user.name}</p>\r\n\r\n                            <h4>Email Address</h4>\r\n                            <p>{user.email}</p>\r\n\r\n                            <h4>Joined On</h4>\r\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\r\n\r\n                            {user.role !== 'admin' && (\r\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\r\n                                    My Orders\r\n                                </Link>\r\n                            )}\r\n\r\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\r\n                                Change Password\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\Login.js",["269","270","271","272"],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\UpdateProfile.js",["273","274","275","276"],[],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport MetaData from '../Layout/Metadata'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getToken } from '../../utils/helpers';\r\n\r\nconst UpdateProfile = () => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n    const [error, setError] = useState('')\r\n    const [user, setUser] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [isUpdated, setIsUpdated] = useState(false)\r\n    let navigate = useNavigate();\r\n\r\n    const getProfile = async () => {\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${getToken()}`\r\n            }\r\n        }\r\n        try {\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/me`, config)\r\n            console.log(data)\r\n            // setUser(data.user)\r\n            setName(data.user.name);\r\n            setEmail(data.user.email);\r\n            setAvatarPreview(data.user.avatar.url)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            toast.error('user not found', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        }\r\n    }\r\n\r\n    const updateProfile = async (userData) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': `Bearer ${getToken()}`\r\n            }\r\n        }\r\n        try {\r\n            const { data } = await axios.put(`http://localhost:4001/api/v1/me/update`, userData, config)\r\n            setIsUpdated(data.success)\r\n            setLoading(false)\r\n            toast.success('user updated', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n            //  getProfile();\r\n            navigate('/me', { replace: true })\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            toast.error('user not found', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        }\r\n    }\r\n\r\n    // console.log(error)\r\n    useEffect(() => {\r\n        getProfile()\r\n\r\n    }, [])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('avatar', avatar);\r\n        updateProfile(formData)\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    console.log(user)\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\ForgotPassword.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\NewPassword.js",["277"],[],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport MetaData from '../Layout/Metadata'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\n\r\nconst NewPassword = () => {\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    let navigate = useNavigate();\r\n    const [error, setError] = useState('')\r\n    const [success, setSuccess] = useState('')\r\n\r\n    let { token } = useParams();\r\n\r\n    const resetPassword = async (token, passwords) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.put(`http://localhost:4001/api/v1/password/reset/${token}`, passwords, config)\r\n            setSuccess(data.success)\r\n        } catch (error) {\r\n            setError(error)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (error) {\r\n            toast.error(error, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        }\r\n        if (success) {\r\n            toast.success('password updated', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n            navigate('/login')\r\n        }\r\n\r\n    }, [error, success,])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n        resetPassword(token, formData)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'New Password Reset'} />\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">New Password</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"confirm_password_field\"\r\n                                className=\"form-control\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"new_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\">\r\n                            Set Password\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\User\\UpdatePassword.js",["278"],[],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport MetaData from '../Layout/Metadata';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport { getToken } from '../../utils/helpers';\r\n\r\nconst UpdatePassword = () => {\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [isUpdated, setIsUpdated] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    let navigate = useNavigate();\r\n    const updatePassword = async (formData) => {\r\n        console.log(formData)\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n\r\n            const {data } = await axios.put(`http://localhost:4001/api/v1/password/update`, formData, config)\r\n            setIsUpdated(data.success)\r\n            setLoading(false)\r\n            toast.success('password updated', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n            navigate('/me')\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (error) {\r\n            toast.error(error, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        }\r\n    }, [error, ])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword);\r\n        formData.set('password', password);\r\n        updatePassword(formData)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Change Password'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} >\r\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"old_password_field\">Old Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"old_password_field\"\r\n                                className=\"form-control\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"new_password_field\">New Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"new_password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Header.js",["279","280","281","282","283"],[],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport '../../App.css'\r\nimport Search from './Search'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { getUser, logout } from '../../utils/helpers';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { FaShoppingCart } from 'react-icons/fa'; \r\n\r\nconst Header = ({ cartItems }) => {\r\n\r\n    const [user, setUser] = useState('')\r\n    const navigate = useNavigate()\r\n    const logoutUser = async () => {\r\n\r\n        try {\r\n            await axios.get(`http://localhost:4001/api/v1/logout`)\r\n\r\n            setUser('')\r\n\r\n            logout(() => navigate('/'))\r\n        } catch (error) {\r\n            toast.error(error.response.data.message)\r\n\r\n        }\r\n    }\r\n    const logoutHandler = () => {\r\n        logoutUser();\r\n        toast.success('log out', {\r\n            position: toast.POSITION.BOTTOM_RIGHT\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        setUser(getUser())\r\n    }, [])\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container-fluidnav\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-right\"> \r\n                    <a className=\"mr-2 text-white\">Follow us on</a>\r\n                    <a href=\"#\" target=\"_blank\" className=\"mr-2\"><i className=\"fa fa-facebook\"></i></a>\r\n                    <a href=\"#\" target=\"_blank\" className=\"mr-2\"><i className=\"fa fa-twitter\"></i></a>\r\n                    <a href=\"#\" target=\"_blank\" className=\"mr-2\"><i className=\"fa fa-instagram\"></i></a>\r\n\r\n                    {user ? (<div className=\"ml-4 dropdown d-inline\">\r\n                        <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            <figure className=\"avatar avatar-nav\">\r\n                                <img\r\n                                    src={user.avatar && user.avatar.url}\r\n                                    alt={user && user.name}\r\n                                    className=\"rounded-circle\"\r\n                                />\r\n                            </figure>\r\n                            <span>{user && user.name}</span>\r\n                        </Link>\r\n\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n                            {user && user.role === 'admin' && (\r\n                                <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                            )}\r\n                            <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\r\n                            <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\r\n\r\n                            <Link\r\n                                className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}\r\n                            >\r\n                                Logout\r\n                            </Link>\r\n                        </div>\r\n                        \r\n                    </div>) : <Link to=\"/login\" className=\"btn ml-1\" id=\"login_btn\">Login</Link> \r\n                    }<a style={{ color: 'white' }}>|</a>\r\n                    <Link to=\"/register\" className=\"btn ml-1\" id=\"logout_btn\">Sign Up</Link> \r\n\r\n \r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            <nav className=\"navbar row justify-content-center\">\r\n            \r\n                <Link to=\"/\" style={{ textDecoration: 'none' }} >\r\n                    <div className=\"col-12 col-md-1\">\r\n                        <div className=\"navbar-brand\">\r\n                            <img src=\"./images/shopit_logo.png\" alt=\"Shopit Logo\" width=\"200\" height=\"60\"/>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                <div className=\"col-12 col-md-8 mt-2 mt-md-0 \">\r\n                    <Search />\r\n                </div>\r\n                \r\n\r\n                <div className=\"col-12 col-md-1 text-left\">\r\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} className=\"cart-container\">\r\n                        <span id=\"cart\" className=\"ml-4\">\r\n                            <FaShoppingCart />\r\n                        </span>\r\n                        {cartItems.length > 0 && (\r\n                            <span className=\"ml-1\" id=\"cart_count\">\r\n                            {cartItems.length}\r\n                            </span>\r\n                        )}\r\n                    </Link>\r\n                    \r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Footer.js",["284","285","286","287","288","289"],[],"import React, { Fragment } from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Fragment>\r\n            <footer className=\"py-1\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <h4>Contact Us</h4>\r\n                            <p>\r\n                                <strong>Tich Tech</strong><br />\r\n                                123 Time Square, Cityville<br />\r\n                                Watchland, WZ 54321<br />\r\n                                <i className=\"fa fa-phone\"></i> +1 (555) 123-4567\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                            <h4>Quick Links</h4>\r\n                            <ul className=\"list-unstyled\" >\r\n                                <li><a href=\"#\">Home</a></li>\r\n                                <li><a href=\"#\">About Us</a></li>\r\n                                <li><a href=\"#\">Contact Us</a></li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-4\">\r\n                            <h4>Stay Connected</h4>\r\n                            <p>Follow us on social media for the latest updates and promotions.</p>\r\n                            <ul className=\"list-inline\">\r\n                                <li><a href=\"#\" target=\"_blank\"><i className=\"fa fa-facebook\"></i></a></li>\r\n                                <li><a href=\"#\" target=\"_blank\"><i className=\"fa fa-twitter\"></i></a></li>\r\n                                <li><a href=\"#\" target=\"_blank\"><i className=\"fa fa-instagram\"></i></a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bottom-footer\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <p className=\"text-center\">\r\n                                    &copy; 2023 Tick Tech . All rights reserved. | Designed by BSIT-NS-3A-T \r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\Cart.js",["290"],[],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../Layout/Metadata'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\n\r\nconst Cart = ({ addItemToCart, cartItems, removeItemFromCart }) => {\r\n    const navigate = useNavigate()\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n        if (newQty > stock) return;\r\n        addItemToCart(id, newQty);\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n        const newQty = quantity - 1;\r\n        if (newQty <= 0) return;\r\n        addItemToCart(id, newQty);\r\n    }\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        removeItemFromCart(id)\r\n    }\r\n    const checkoutHandler = () => {\r\n        navigate('/login?redirect=shipping')\r\n    }\r\n    localStorage.setItem('cartItems', JSON.stringify(cartItems))\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.product}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\r\n                                        \r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\Shipping.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\ConfirmOrder.js",["291"],[],"import React, { Fragment, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport MetaData from '../Layout/Metadata'\r\nimport CheckoutSteps from './CheckoutSteps'\r\nimport { getUser } from '../../utils/helpers'\r\nconst ConfirmOrder = ({cartItems, shippingInfo}) => {\r\n    const [user, setUser] = useState(getUser() ? getUser() : {})\r\n    let navigate = useNavigate();\r\n    // Calculate Order Prices\r\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\r\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\r\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\r\n\r\n    const processToPayment = () => {\r\n        const data = {\r\n            itemsPrice: itemsPrice.toFixed(2),\r\n            shippingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n        }\r\n\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\r\n        navigate('/payment')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Confirm Order'} />\r\n            <CheckoutSteps shipping confirmOrder />\r\n            <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n                    <h4 className=\"mb-3\">Shipping Info</h4>\r\n                    {getUser() && <p><b>Name:</b> {user && user.name}</p>}\r\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\r\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\r\n\r\n                    <hr />\r\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n\r\n                    {cartItems.map(item => (\r\n                        <Fragment>\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\" key={item.product}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 col-lg-2\">\r\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-5 col-lg-6\">\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </Fragment>\r\n                    ))}\r\n\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3 my-4\">\r\n                    <div id=\"order_summary\">\r\n                        <h4>Order Summary</h4>\r\n                        <hr />\r\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\r\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\r\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\r\n\r\n                        <hr />\r\n\r\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\r\n\r\n                        <hr />\r\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmOrder","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\Payment.js",["292","293","294"],[],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport MetaData from '../Layout/Metadata'\r\nimport CheckoutSteps from './CheckoutSteps'\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getToken } from '../../utils/helpers';\r\n\r\n\r\nconst Payment = ({cartItems, shippingInfo}) => {\r\n    const [loading, setLoading] = useState(true)\r\n    let navigate = useNavigate();\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    }\r\n\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\r\n    if (orderInfo) {\r\n        order.itemsPrice = orderInfo.itemsPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n    const createOrder = async (order) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n            const { data } = await axios.post(`http//:localhost:4001/api/v1/order/new`, order, config)\r\n            // setIsUpdated(data.success)\r\n            setLoading(false)\r\n            toast.success('order created', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n           \r\n            \r\n            navigate('/success')\r\n    \r\n        } catch (error) {\r\n            toast.error(error.response.data.message, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n           }\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        document.querySelector('#pay_btn').disabled = true;\r\n        order.paymentInfo = {\r\n            id: 'pi_1DpdYh2eZvKYlo2CYIynhU32',\r\n            status: 'succeeded'\r\n        }\r\n        createOrder(order)\r\n        navigate('/success')\r\n      }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Payment'} />\r\n            <CheckoutSteps shipping confirmOrder payment />\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Card Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_num_field\">Card Number</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"card_num_field\"\r\n                                className=\"form-control\"\r\n                                \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"card_exp_field\"\r\n                                className=\"form-control\"\r\n                               \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"card_cvc_field\"\r\n                                className=\"form-control\"\r\n                                \r\n                            />\r\n                        </div>\r\n                        <button\r\n                            id=\"pay_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            Pay {` - ${orderInfo && orderInfo.totalPrice}`}\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Payment","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\OrderSuccess.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Order\\ListOrders.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Order\\OrderDetails.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Route\\ProtectedRoute.js",["295","296","297","298","299","300"],[],"import React, {useState} from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport Loader from '../Layout/Loader'\r\nimport { getUser } from '../../utils/helpers';\r\n\r\nconst ProtectedRoute = ({ children, isAdmin = false }) => {\r\n    const [loading, setLoading] = useState(getUser() === false && false )\r\n    const [error, setError] = useState('')\r\n    const [user, setUser] = useState(getUser())\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    console.log(children.type.name, loading)\r\n    \r\n    if (loading === false) {\r\n        if (!user) {\r\n            return <Navigate to='/login' />\r\n        }\r\n        if (isAdmin === true && user.role !== 'admin') {\r\n            return <Navigate to='/' />\r\n        }\r\n        return children\r\n    }\r\n    return <Loader />;\r\n\r\n};\r\n\r\nexport default ProtectedRoute;","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\NewProduct.js",["301","302","303"],[],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport MetaData from '../Layout/Metadata'\r\nimport Sidebar from './SideBar'\r\nimport { getToken } from '../../utils/helpers';\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst NewProduct = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [success, setSuccess] = useState('')\r\n    const [product, setProduct] = useState({})\r\n\r\n    const categories = [\r\n        'Kids Watch',\r\n        'Mens Watch',\r\n        'Womens Watch',\r\n        'Sports Watch',\r\n        'Smart Watch',\r\n    ]\r\n\r\n    let navigate = useNavigate()\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n        \r\n        newProduct(formData)\r\n    }\r\n\r\n    const onChange = e => {\r\n        const files = Array.from(e.target.files)\r\n        setImagesPreview([]);\r\n        setImages([])\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n            \r\n            reader.readAsDataURL(file)\r\n            // console.log(reader)\r\n        })\r\n       \r\n    }\r\n    const newProduct = async (formData) => {\r\n       \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post(`http://localhost:4001/api/v1/admin/product/new`, formData, config)\r\n            setLoading(false)\r\n            setSuccess(data.success)\r\n            setProduct(data.product)\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            toast.error(error, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        }\r\n\r\n        if (success) {\r\n            navigate('/admin/products');\r\n            toast.success('Product created successfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n\r\n        }\r\n\r\n    }, [error, success,])\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'New Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">New Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                        </label>\r\n                                    </div>\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                // disabled={loading ? true : false}\r\n                                >\r\n                                    CREATE\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\nexport default NewProduct","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\Dashboard.js",["304","305","306","307","308","309","310","311"],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\UpdateProduct.js",["312"],[],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport MetaData from \"../Layout/Metadata\";\r\nimport Sidebar from \"./SideBar\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { getToken } from \"../../utils/helpers\";\r\n\r\nconst UpdateProduct = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [stock, setStock] = useState(0);\r\n  const [seller, setSeller] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [oldImages, setOldImages] = useState([]);\r\n  const [imagesPreview, setImagesPreview] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [product, setProduct] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [updateError, setUpdateError] = useState(\"\");\r\n  const [isUpdated, setIsUpdated] = useState(false);\r\n\r\n  const categories = [\r\n    \"Kids Watch\",\r\n    \"Mens Watch\",\r\n    \"Womens Watch\",\r\n    \"Sports Watch\",\r\n    \"Smart Watch\",\r\n  ];\r\n  let { id } = useParams();\r\n  let navigate = useNavigate();\r\n\r\n  const errMsg = (message = \"\") =>\r\n    toast.error(message, {\r\n      position: toast.POSITION.BOTTOM_CENTER,\r\n    });\r\n  const successMsg = (message = \"\") =>\r\n    toast.success(message, {\r\n      position: toast.POSITION.BOTTOM_CENTER,\r\n    });\r\n\r\n  const getProductDetails = async (id) => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `http://localhost:4001/api/v1/product/${id}`\r\n      );\r\n      setProduct(data.product);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  const updateProduct = async (id, productData) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${getToken()}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `http://localhost:4001/api/v1/admin/product/${id}`,\r\n        productData,\r\n        config\r\n      );\r\n      setIsUpdated(data.success);\r\n    } catch (error) {\r\n      setUpdateError(error.response.data.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (product && product._id !== id) {\r\n      getProductDetails(id);\r\n    } else {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setDescription(product.description);\r\n      setCategory(product.category);\r\n      setSeller(product.seller);\r\n      setStock(product.stock);\r\n      setOldImages(product.images);\r\n    }\r\n    if (error) {\r\n      errMsg(error);\r\n    }\r\n    if (updateError) {\r\n      errMsg(updateError);\r\n    }\r\n    if (isUpdated) {\r\n      navigate(\"/admin/products\");\r\n      successMsg(\"Product updated successfully\");\r\n    }\r\n  }, [error, isUpdated, updateError, product, id]);\r\n\r\n  const submitHandler = (e) => {\r\n    // console.log(e);\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.set(\"name\", name);\r\n    formData.set(\"price\", price);\r\n    formData.set(\"description\", description);\r\n    formData.set(\"category\", category);\r\n    formData.set(\"stock\", stock);\r\n    formData.set(\"seller\", seller);\r\n    images.forEach((image) => {\r\n      formData.append(\"images\", image);\r\n    });\r\n    console.log(images);\r\n    updateProduct(product._id, formData);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    setImagesPreview([]);\r\n    setImages([]);\r\n    setOldImages([]);\r\n    files.forEach((file) => {\r\n      const reader = new FileReader();\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setImagesPreview((oldArray) => [...oldArray, reader.result]);\r\n          setImages((oldArray) => [...oldArray, reader.result]);\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={\"Update Product\"} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"col-12 col-md-10\">\r\n          <Fragment>\r\n            <div className=\"wrapper my-5\">\r\n              <form\r\n                className=\"shadow-lg\"\r\n                onSubmit={submitHandler}\r\n                // encType=\"multipart/form-data\"\r\n              >\r\n                <h1 className=\"mb-4\">Update Product</h1>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name_field\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name_field\"\r\n                    className=\"form-control\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"price_field\">Price</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"price_field\"\r\n                    className=\"form-control\"\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"description_field\">Description</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    id=\"description_field\"\r\n                    rows=\"8\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"category_field\">Category</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    id=\"category_field\"\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                  >\r\n                    {categories.map((category) => (\r\n                      <option key={category} value={category}>\r\n                        {category}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"stock_field\">Stock</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"stock_field\"\r\n                    className=\"form-control\"\r\n                    value={stock}\r\n                    onChange={(e) => setStock(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"seller_field\">Seller Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"seller_field\"\r\n                    className=\"form-control\"\r\n                    value={seller}\r\n                    onChange={(e) => setSeller(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Images</label>\r\n                  <div className=\"custom-file\">\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"images\"\r\n                      className=\"custom-file-input\"\r\n                      id=\"customFile\"\r\n                      onChange={onChange}\r\n                      multiple\r\n                    />\r\n                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\r\n                      Choose Images\r\n                    </label>\r\n                  </div>\r\n                  {oldImages &&\r\n                    oldImages.map((img) => (\r\n                      <img\r\n                        key={img}\r\n                        src={img.url}\r\n                        alt={img.url}\r\n                        className=\"mt-3 mr-2\"\r\n                        width=\"55\"\r\n                        height=\"52\"\r\n                      />\r\n                    ))}\r\n                  {imagesPreview.map((img) => (\r\n                    <img\r\n                      src={img}\r\n                      key={img}\r\n                      alt=\"Images Preview\"\r\n                      className=\"mt-3 mr-2\"\r\n                      width=\"55\"\r\n                      height=\"52\"\r\n                    />\r\n                  ))}\r\n                </div>\r\n                <button\r\n                  id=\"login_button\"\r\n                  type=\"submit\"\r\n                  className=\"btn btn-block py-3\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  UPDATE\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </Fragment>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\ProductsList.js",["313","314","315","316","317","318","319","320","321","322","323","324"],[],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../Layout/Metadata'\r\nimport Loader from '../Layout/Loader'\r\nimport Sidebar from './SideBar'\r\nimport { getToken } from '../../utils/helpers';\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nimport { ProSidebar, Menu, MenuItem } from \"react-pro-sidebar\";\r\nimport { Box, IconButton, Typography, useTheme } from \"@mui/material\";\r\n\r\nconst ProductsList = () => {\r\n    const [products, setProducts] = useState([])\r\n    const [error, setError] = useState('')\r\n    const [deleteError, setDeleteError] = useState('')\r\n    const [users, setUsers] = useState([])\r\n    const [orders, setOrders] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [isDeleted, setIsDeleted] = useState(false)\r\n\r\n    let navigate = useNavigate()\r\n    const getAdminProducts = async () => {\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/admin/products`, config)\r\n            console.log(data)\r\n            setProducts(data.products)\r\n            setLoading(false)\r\n        } catch (error) {\r\n\r\n            setError(error.response.data.message)\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getAdminProducts()\r\n\r\n        if (error) {\r\n            toast.error(error, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        }\r\n\r\n        if (deleteError) {\r\n            toast.error(deleteError, {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            });\r\n        }\r\n\r\n        if (isDeleted) {\r\n            toast.success('Product deleted successfully', {\r\n                position: toast.POSITION.BOTTOM_RIGHT\r\n            })\r\n            navigate('/admin/products');\r\n\r\n        }\r\n\r\n    }, [error, deleteError, isDeleted,])\r\n\r\n    const deleteProduct = async (id) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n            const { data } = await axios.delete(`http://localhost:4001/api/v1/admin/product/${id}`, config)\r\n\r\n            setIsDeleted(data.success)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setDeleteError(error.response.data.message)\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const productsList = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Price',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Stock',\r\n                    field: 'stock',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        products.forEach(product => {\r\n            data.rows.push({\r\n                id: product._id,\r\n                name: product.name,\r\n                price: `$${product.price}`,\r\n                stock: product.stock,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        deleteProduct(id)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Products</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={productsList()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsList","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\OrdersList.js",["325"],[],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport MetaData from '../Layout/Metadata'\r\nimport Loader from '../Layout/Loader'\r\nimport Sidebar from './SideBar'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getToken } from '../../utils/helpers'\r\nimport axios from 'axios'\r\n\r\nconst OrdersList = () => {\r\n    let navigate = useNavigate();\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const [allOrders, setAllOrders] = useState([])\r\n    const [isDeleted, setIsDeleted] = useState(false)\r\n    const errMsg = (message = '') => toast.error(message, {\r\n        position: toast.POSITION.BOTTOM_CENTER\r\n    });\r\n    const successMsg = (message = '') => toast.success(message, {\r\n        position: toast.POSITION.BOTTOM_CENTER\r\n    });\r\n\r\n    const listOrders = async () => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/admin/orders`, config)\r\n            setAllOrders(data.orders)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n        }\r\n    }\r\n    const deleteOrder = async (id) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n            const { data } = await axios.delete(`http://localhost:4001/api/v1/admin/order/${id}`, config)\r\n            setIsDeleted(data.success)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        listOrders()\r\n        if (error) {\r\n            errMsg(error)\r\n            setError('')\r\n        }\r\n        if (isDeleted) {\r\n            successMsg('Order deleted successfully');\r\n            navigate('/admin/orders');\r\n        }\r\n    }, [error, isDeleted])\r\n    const deleteOrderHandler = (id) => {\r\n        deleteOrder(id)\r\n    }\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n\r\n                {\r\n                    label: 'No of Items',\r\n                    field: 'numofItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        allOrders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numofItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteOrderHandler(order._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n        return data;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Orders'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Orders</h1>\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setOrders()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrdersList","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\ProcessOrder.js",["326"],[],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link, useParams, useNavigate,  } from 'react-router-dom'\r\nimport MetaData from '../Layout/Metadata'\r\nimport Loader from '../Layout/Loader'\r\nimport Sidebar from './SideBar'\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\nimport { getToken } from '../../utils/helpers'\r\n\r\nconst ProcessOrder = () => {\r\n\r\n    const [status, setStatus] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const [order, setOrder] = useState({})\r\n    const [isUpdated, setIsUpdated] = useState(false)\r\n    let navigate = useNavigate()\r\n\r\n    let { id } = useParams();\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n    const orderId = id;\r\n    const errMsg = (message = '') => toast.error(message, {\r\n        position: toast.POSITION.BOTTOM_CENTER\r\n    });\r\n\r\n    const successMsg = (message = '') => toast.success(message, {\r\n        position: toast.POSITION.BOTTOM_CENTER\r\n    });\r\n\r\n    const getOrderDetails = async (id) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/order/${id}`, config)\r\n            setOrder(data.order)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n        }\r\n    }\r\n    const updateOrder = async (id, formData) => {\r\n      \r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n            const { data } = await axios.put(`http://localhost:4001/api/v1/admin/order/${id}`, formData, config)\r\n            setIsUpdated(data.success)\r\n            \r\n\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrderDetails(orderId)\r\n        if (error) {\r\n            errMsg(error);\r\n            setError('')\r\n        }\r\n        if (isUpdated) {\r\n            successMsg('Order updated successfully');\r\n            setIsUpdated('')\r\n            navigate('/admin/orders')\r\n        }\r\n    }, [error, isUpdated, orderId])\r\n\r\n    const updateOrderHandler = (id) => {\r\n        const formData = new FormData();\r\n        formData.set('status', status);\r\n        updateOrder(id, formData)\r\n    }\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Process Order # ${order && order._id}`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        {loading ? <Loader /> : (\r\n                            <div className=\"row d-flex justify-content-around\">\r\n                                <div className=\"col-12 col-lg-7 order-details\">\r\n                                    <h2 className=\"my-5\">Order # {order._id}</h2>\r\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\r\n                                    <p><b>Name:</b> {user && user.name}</p>\r\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                                    <p><b>Amount:</b> ${totalPrice}</p>\r\n                                    <hr />\r\n                                    <h4 className=\"my-4\">Payment</h4>\r\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n                                    <h4 className=\"my-4\">Stripe ID</h4>\r\n                                    <p><b>{paymentInfo && paymentInfo.id}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Order Status:</h4>\r\n                                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n                                    <h4 className=\"my-4\">Order Items:</h4>\r\n                                    <hr />\r\n                                    <div className=\"cart-item my-1\">\r\n                                        {orderItems && orderItems.map(item => (\r\n                                            <div key={item.product} className=\"row my-5\">\r\n                                                <div className=\"col-4 col-lg-2\">\r\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-5 col-lg-5\">\r\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                                </div>\r\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                    <p>${item.price}</p>\r\n                                                </div>\r\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                    <p>{item.quantity} Piece(s)</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n                                <div className=\"col-12 col-lg-3 mt-5\">\r\n                                    <h4 className=\"my-4\">Status</h4>\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name='status'\r\n                                            value={status}\r\n                                            onChange={(e) => setStatus(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Processing\">Processing</option>\r\n                                            <option value=\"Shipped\">Shipped</option>\r\n                                            <option value=\"Delivered\">Delivered</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\r\n                                        Update Status\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default ProcessOrder","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\UsersList.js",["327","328","329"],[],"import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport MetaData from '../Layout/Metadata'\r\nimport Loader from '../Layout/Loader'\r\nimport Sidebar from './SideBar'\r\n\r\nimport axios from 'axios';\r\nimport { getToken, successMsg, errMsg } from '../../utils/helpers';\r\nimport Toast from '../Layout/Toast';\r\n\r\nconst UsersList = () => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const [allUsers, setAllUsers] = useState([])\r\n    const [isDeleted, setIsDeleted] = useState('')\r\n    let navigate = useNavigate();\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json', \r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    }\r\n    const listUsers = async () => {\r\n        try {\r\n\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/admin/users`, config)\r\n            setAllUsers(data.users)\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n            \r\n        }\r\n    }\r\n    const deleteUser = async (id) => {\r\n        try {\r\n            const { data } = await axios.delete(`http://localhost:4001/api/v1/admin/user/${id}`, config)\r\n            setIsDeleted(data.success)\r\n            setLoading(false)\r\n            \r\n        } catch (error) {\r\n           setError(error.response.data.message)\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        listUsers();\r\n        if (error) {\r\n            errMsg(error);\r\n            setError('')\r\n        }\r\n        if (isDeleted) {\r\n            successMsg('User deleted successfully');\r\n            navigate('/admin/users');\r\n\r\n        }\r\n\r\n    }, [error, isDeleted,])\r\n\r\n\r\n    const deleteUserHandler = (id) => {\r\n       deleteUser(id)\r\n    }\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                   label: 'User ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n        allUsers.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n        return data;\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Users'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Users</h1>\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setUsers()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UsersList","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\UpdateUser.js",["330","331","332"],[],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport MetaData from '../Layout/Metadata'\r\nimport Sidebar from './SideBar'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { errMsg, successMsg } from '../../utils/helpers';\r\nimport { getToken } from '../../utils/helpers';\r\nimport axios from 'axios';\r\n\r\nconst UpdateUser = () => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [role, setRole] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const [user, setUser] = useState(true)\r\n    const [isUpdated, setIsUpdated] = useState(false)\r\n    let navigate = useNavigate();\r\n\r\n    const { id } = useParams();\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json', \r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    }\r\n    const getUserDetails = async (id) => {\r\n    \r\n        try {\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/admin/user/${id}`,config)\r\n            setUser(data.user)\r\n            setLoading(false)\r\n            \r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    const updateUser = async (id, userData) => {\r\n        try {\r\n            const { data } = await axios.put(`http://localhost:4001/api/v1/admin/user/${id}`, userData, config)\r\n            setIsUpdated(data.success)\r\n            setLoading(false)\r\n            \r\n        } catch (error) {\r\n           setError(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(user && user._id !== userId);\r\n        if (user && user._id !== id) {\r\n            getUserDetails(id)\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setRole(user.role)\r\n        }\r\n        if (error) {\r\n            errMsg(error);\r\n            setError('');\r\n        }\r\n        if (isUpdated) {\r\n            successMsg('User updated successfully')\r\n            navigate('/admin/users')\r\n           \r\n        }\r\n    }, [error, isUpdated, id, user])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('role', role);\r\n        updateUser(user._id, formData)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Update User`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mt-2 mb-5\">Update User</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"name\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        name='name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"role_field\">Role</label>\r\n                                    <select\r\n                                        id=\"role_field\"\r\n                                        className=\"form-control\"\r\n                                        name='role'\r\n                                        value={role}\r\n                                        onChange={(e) => setRole(e.target.value)}\r\n                                    >\r\n                                        <option value=\"user\">user</option>\r\n                                        <option value=\"admin\">admin</option>\r\n                                    </select>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateUser","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\ProductReviews.js",["333","334","335","336"],[],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../Layout/Metadata'\r\nimport Loader from '../Layout/Loader'\r\nimport Sidebar from './SideBar'\r\nimport Toast from '../Layout/Toast'\r\nimport Swal from 'sweetalert2'\r\nimport { getUser, getToken, } from '../../utils/helpers'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst ProductReviews = () => {\r\n    const [productId, setProductId] = useState('')\r\n    const [error, setError] = useState('')\r\n    const [listReviews, setListReviews] = useState([])\r\n    const [deleteError, setDeleteError] = useState('')\r\n    const [isDeleted, setIsDeleted] = useState(false)\r\n    const [user, setUser] = useState(getUser())\r\n   \r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${getToken()}`\r\n        }\r\n    }\r\n\r\n    const getProductReviews = async (id) => {\r\n        try {\r\n\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/reviews?id=${id}`, config)\r\n            setListReviews(data.reviews)\r\n\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n        }\r\n    }\r\n    const deleteReview = async (id, productId) => {\r\n        try {\r\n            const { data } = await axios.delete(`http://localhost:4001/api/v1/reviews?id=${id}&productId=${productId}`, config)\r\n            setIsDeleted(data.success)\r\n\r\n        } catch (error) {\r\n            setDeleteError(error.response.data.message);\r\n        }\r\n    }\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        Swal.fire({\r\n            title: 'Delete User',\r\n            icon: 'info',\r\n            text: 'Do you want to delete this user',\r\n            confirmButtonText: 'Delete',\r\n            showCancelButton: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteReview(id, productId)\r\n            }\r\n        })\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (error) {\r\n            Toast('error fetching reviews', 'error')\r\n            setError('')\r\n        }\r\n\r\n        if (deleteError) {\r\n            Toast(deleteError, 'error');\r\n            setDeleteError('')\r\n        }\r\n\r\n        if (productId !== '') {\r\n            getProductReviews(productId)\r\n        }\r\n\r\n        if (isDeleted) {\r\n            Toast('Review deleted successfully', 'success');\r\n            setIsDeleted(false)\r\n        }\r\n    }, [error, productId, isDeleted, deleteError])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        getProductReviews(productId)\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        listReviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n                actions:\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n\r\n            })\r\n        })\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Product Reviews'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"productId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={productId}\r\n                                            onChange={(e) => setProductId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n                                    </button>\r\n                                </ form>\r\n                            </div>\r\n                        </div>\r\n                        {listReviews && listReviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                            <p className=\"mt-5 text-center\">No Reviews.</p>\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductReviews","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Metadata.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Loader.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Product\\Product.js",["337","338"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <div className=\"col-sm-12 col-md-6 col-lg-3 my-3\">\r\n      <div className=\"card p-3 rounded\">\r\n        <img\r\n          className=\"card-img-top mx-auto\"\r\n          src={\r\n            product.images && product.images.length > 0 && product.images[0].url\r\n          }\r\n        />\r\n        <div className=\"card-body d-flex flex-column\">\r\n          <h5 className=\"card-title\">\r\n            <a href=\"\">{product.name}</a>\r\n          </h5>\r\n          <div className=\"ratings mt-auto\">\r\n            <div className=\"rating-outer\">\r\n              <div\r\n                className=\"rating-inner\"\r\n                style={{ width: `${(product.ratings / 5) * 100}%` }}\r\n              ></div>\r\n            </div>\r\n            <span id=\"no_of_reviews\">({product.numOfReviews} reviews)</span>\r\n          </div>\r\n          <p className=\"card-text\">${product.price}</p>\r\n          <Link\r\n            to={`/product/${product._id}`}\r\n            id=\"view_btn\"\r\n            className=\"btn btn-block\"\r\n          >\r\n            View Details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Product;\r\n","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\utils\\helpers.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Cart\\CheckoutSteps.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Review\\ListReviews.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Search.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\SideBar.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Layout\\Toast.js",[],[],"C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\MonthlySalesChart.js",["339"],[],"import React, { useState, useEffect } from 'react'\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport { getToken } from \"../../utils/helpers\";\r\nimport axios from \"axios\";\r\nimport Loader from '../Layout/Loader';\r\n\r\nexport default function MonthlySalesChart() {\r\n    const [sales, setSales] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const monthlySales = async () => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/admin/sales-per-month`, config)\r\n            setSales(data.salesPerMonth)\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n           setError(error.response.data.message)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        monthlySales()\r\n       \r\n    }, [])\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"90%\" height={600}>\r\n            {loading ? <Loader /> : ( <LineChart width={600} height={300} data={sales} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n                <Line type=\"monotone\" dataKey=\"total\" stroke=\"#8884d8\" />\r\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                <XAxis dataKey=\"month\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n            </LineChart> )}\r\n        </ResponsiveContainer>\r\n\r\n\r\n    );\r\n}","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\ProductSalesChart.js",["340","341","342","343"],[],"import React, { useState, useEffect } from 'react'\r\nimport { getToken } from \"../../utils/helpers\";\r\nimport axios from \"axios\";\r\nimport Loader from '../Layout/Loader';\r\n\r\nimport { PieChart, Pie, Legend, Tooltip, ResponsiveContainer, Cell } from 'recharts';\r\n\r\nexport default function ProductSalesChart({ data }) {\r\n    const [sales, setSales] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const pieColors = [\r\n        \"#FF6633\",\r\n        \"#FFB399\",\r\n        \"#FF33FF\",\r\n        \"#FFFF99\",\r\n        \"#00B3E6\",\r\n        \"#E6B333\",\r\n        \"#3366E6\",\r\n        \"#999966\",\r\n        \"#809980\",\r\n        \"#E6FF80\",\r\n        \"#1AFF33\",\r\n        \"#999933\",\r\n        \"#FF3380\",\r\n        \"#CCCC00\",\r\n        \"#66E64D\",\r\n        \"#4D80CC\",\r\n        \"#FF4D4D\",\r\n        \"#99E6E6\",\r\n        \"#6666FF\"\r\n    ]\r\n    // console.log(data)\r\n\r\n    const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n                {`${percent}%`}\r\n            </text>\r\n        );\r\n    };\r\n    const productSales = async () => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/admin/product-sales`, config)\r\n            setSales(data.totalPercentage)\r\n\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n            \r\n        }\r\n    }\r\n    useEffect(() => {\r\n        productSales()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"90%\" height={1000}>\r\n            <PieChart width={1000} height={1000}>\r\n                {/* <Pie data={data} dataKey=\"percent\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={50} fill=\"#8884d8\" /> */}\r\n                <Pie\r\n                    dataKey=\"percent\"\r\n                    nameKey=\"name\"\r\n                    isAnimationActive={true}\r\n                    data={sales}\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    outerRadius={300}\r\n                    fill=\"#8884d8\"\r\n                    label={renderCustomizedLabel}\r\n                    labelLine={false}\r\n                // label\r\n                >  {\r\n                        sales.map((entry, index) => <Cell key={`cell-${index}`} fill={pieColors[index % pieColors.length]} />)\r\n                    }\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend layout=\"vertical\" verticalAlign=\"top\" align=\"right\" />\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n\r\n\r\n    );\r\n}","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\Admin\\UserSalesChart.js",["344"],[],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend,\r\n    ResponsiveContainer,\r\n    Cell,\r\n} from \"recharts\";\r\nimport { getToken } from \"../../utils/helpers\";\r\nimport axios from \"axios\";\r\nimport Loader from '../Layout/Loader';\r\n\r\nconst UserSalesChart = ({ data }) => {\r\n    const [sales, setSales] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState('')\r\n    const userSales = async () => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${getToken()}`\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.get(`http://localhost:4001/api/v1/admin/customer-sales`, config)\r\n            setSales(data.customerSales)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n        }\r\n    }\r\n    const barColors = [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\"]\r\n    useEffect(() => {\r\n        userSales()\r\n        // allUsers()\r\n    }, [])\r\n\r\n    return (\r\n        <ResponsiveContainer width=\"90%\" height={600}>\r\n            {loading ? <Loader /> : (<BarChart data={sales} >\r\n                <CartesianGrid strokeDasharray=\"2 2\" />\r\n                <XAxis dataKey=\"userDetails.name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Legend />\r\n\r\n                <Bar dataKey=\"total\" stroke=\"#000000\"\r\n                    strokeWidth={5} >\r\n                    {\r\n                        sales.map((item, index) => (\r\n                            <Cell key={`cell-${index}`} fill={barColors[index % 20]} />\r\n                        ))\r\n                    }\r\n                </Bar>\r\n            </BarChart>)}\r\n        </ResponsiveContainer>\r\n\r\n\r\n    );\r\n}\r\nexport default UserSalesChart","C:\\Users\\Admin\\TikTechShop\\frontend\\src\\Components\\dashboard\\Header.js",[],[],{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":15,"column":17,"nodeType":"359","messageId":"360","endLine":15,"endColumn":31},{"ruleId":"357","severity":1,"message":"361","line":13,"column":8,"nodeType":"359","messageId":"360","endLine":13,"endColumn":14},{"ruleId":"357","severity":1,"message":"362","line":34,"column":12,"nodeType":"359","messageId":"360","endLine":34,"endColumn":17},{"ruleId":"357","severity":1,"message":"363","line":34,"column":19,"nodeType":"359","messageId":"360","endLine":34,"endColumn":27},{"ruleId":"357","severity":1,"message":"364","line":71,"column":11,"nodeType":"359","messageId":"360","endLine":71,"endColumn":19},{"ruleId":"357","severity":1,"message":"365","line":74,"column":21,"nodeType":"359","messageId":"360","endLine":74,"endColumn":25},{"ruleId":"357","severity":1,"message":"366","line":20,"column":18,"nodeType":"359","messageId":"360","endLine":20,"endColumn":25},{"ruleId":"357","severity":1,"message":"367","line":20,"column":12,"nodeType":"359","messageId":"360","endLine":20,"endColumn":19},{"ruleId":"368","severity":1,"message":"369","line":33,"column":8,"nodeType":"370","endLine":33,"endColumn":42,"suggestions":"371"},{"ruleId":"353","severity":1,"message":"372","line":33,"column":9,"nodeType":"373","messageId":"374","endLine":33,"endColumn":31,"fix":"375"},{"ruleId":"376","severity":1,"message":"377","line":98,"column":28,"nodeType":"378","endLine":103,"endColumn":30},{"ruleId":"345","replacedBy":"379"},{"ruleId":"347","replacedBy":"380"},{"ruleId":"349","replacedBy":"381"},{"ruleId":"351","replacedBy":"382"},{"ruleId":"353","replacedBy":"383"},{"ruleId":"355","replacedBy":"384"},{"ruleId":"357","severity":1,"message":"385","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":17},{"ruleId":"357","severity":1,"message":"386","line":16,"column":21,"nodeType":"359","messageId":"360","endLine":16,"endColumn":31},{"ruleId":"357","severity":1,"message":"387","line":21,"column":11,"nodeType":"359","messageId":"360","endLine":21,"endColumn":17},{"ruleId":"368","severity":1,"message":"388","line":51,"column":8,"nodeType":"370","endLine":51,"endColumn":10,"suggestions":"389"},{"ruleId":"376","severity":1,"message":"377","line":63,"column":33,"nodeType":"378","endLine":69,"endColumn":35},{"ruleId":"357","severity":1,"message":"362","line":14,"column":12,"nodeType":"359","messageId":"360","endLine":14,"endColumn":17},{"ruleId":"357","severity":1,"message":"363","line":14,"column":19,"nodeType":"359","messageId":"360","endLine":14,"endColumn":27},{"ruleId":"357","severity":1,"message":"366","line":15,"column":18,"nodeType":"359","messageId":"360","endLine":15,"endColumn":25},{"ruleId":"357","severity":1,"message":"390","line":17,"column":12,"nodeType":"359","messageId":"360","endLine":17,"endColumn":21},{"ruleId":"368","severity":1,"message":"391","line":44,"column":8,"nodeType":"370","endLine":44,"endColumn":25,"suggestions":"392"},{"ruleId":"357","severity":1,"message":"390","line":14,"column":12,"nodeType":"359","messageId":"360","endLine":14,"endColumn":21},{"ruleId":"393","severity":1,"message":"394","line":43,"column":21,"nodeType":"378","endLine":43,"endColumn":52},{"ruleId":"393","severity":1,"message":"395","line":44,"column":21,"nodeType":"378","endLine":44,"endColumn":66},{"ruleId":"393","severity":1,"message":"395","line":45,"column":21,"nodeType":"378","endLine":45,"endColumn":66},{"ruleId":"393","severity":1,"message":"395","line":46,"column":21,"nodeType":"378","endLine":46,"endColumn":66},{"ruleId":"393","severity":1,"message":"394","line":75,"column":22,"nodeType":"378","endLine":75,"endColumn":52},{"ruleId":"393","severity":1,"message":"395","line":22,"column":37,"nodeType":"378","endLine":22,"endColumn":49},{"ruleId":"393","severity":1,"message":"395","line":23,"column":37,"nodeType":"378","endLine":23,"endColumn":49},{"ruleId":"393","severity":1,"message":"395","line":24,"column":37,"nodeType":"378","endLine":24,"endColumn":49},{"ruleId":"393","severity":1,"message":"395","line":32,"column":37,"nodeType":"378","endLine":32,"endColumn":65},{"ruleId":"393","severity":1,"message":"395","line":33,"column":37,"nodeType":"378","endLine":33,"endColumn":65},{"ruleId":"393","severity":1,"message":"395","line":34,"column":37,"nodeType":"378","endLine":34,"endColumn":65},{"ruleId":"357","severity":1,"message":"396","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":19},{"ruleId":"357","severity":1,"message":"366","line":7,"column":18,"nodeType":"359","messageId":"360","endLine":7,"endColumn":25},{"ruleId":"357","severity":1,"message":"397","line":1,"column":27,"nodeType":"359","messageId":"360","endLine":1,"endColumn":36},{"ruleId":"357","severity":1,"message":"367","line":12,"column":12,"nodeType":"359","messageId":"360","endLine":12,"endColumn":19},{"ruleId":"357","severity":1,"message":"365","line":35,"column":21,"nodeType":"359","messageId":"360","endLine":35,"endColumn":25},{"ruleId":"357","severity":1,"message":"386","line":8,"column":21,"nodeType":"359","messageId":"360","endLine":8,"endColumn":31},{"ruleId":"357","severity":1,"message":"362","line":9,"column":12,"nodeType":"359","messageId":"360","endLine":9,"endColumn":17},{"ruleId":"357","severity":1,"message":"363","line":9,"column":19,"nodeType":"359","messageId":"360","endLine":9,"endColumn":27},{"ruleId":"357","severity":1,"message":"366","line":10,"column":18,"nodeType":"359","messageId":"360","endLine":10,"endColumn":25},{"ruleId":"357","severity":1,"message":"398","line":11,"column":12,"nodeType":"359","messageId":"360","endLine":11,"endColumn":27},{"ruleId":"357","severity":1,"message":"399","line":11,"column":29,"nodeType":"359","messageId":"360","endLine":11,"endColumn":47},{"ruleId":"357","severity":1,"message":"367","line":21,"column":12,"nodeType":"359","messageId":"360","endLine":21,"endColumn":19},{"ruleId":"357","severity":1,"message":"400","line":23,"column":12,"nodeType":"359","messageId":"360","endLine":23,"endColumn":19},{"ruleId":"368","severity":1,"message":"391","line":106,"column":8,"nodeType":"370","endLine":106,"endColumn":25,"suggestions":"401"},{"ruleId":"357","severity":1,"message":"402","line":9,"column":10,"nodeType":"359","messageId":"360","endLine":9,"endColumn":15},{"ruleId":"357","severity":1,"message":"362","line":19,"column":12,"nodeType":"359","messageId":"360","endLine":19,"endColumn":17},{"ruleId":"357","severity":1,"message":"403","line":20,"column":12,"nodeType":"359","messageId":"360","endLine":20,"endColumn":17},{"ruleId":"357","severity":1,"message":"404","line":20,"column":19,"nodeType":"359","messageId":"360","endLine":20,"endColumn":27},{"ruleId":"357","severity":1,"message":"405","line":21,"column":12,"nodeType":"359","messageId":"360","endLine":21,"endColumn":18},{"ruleId":"357","severity":1,"message":"406","line":21,"column":20,"nodeType":"359","messageId":"360","endLine":21,"endColumn":29},{"ruleId":"357","severity":1,"message":"407","line":23,"column":12,"nodeType":"359","messageId":"360","endLine":23,"endColumn":23},{"ruleId":"357","severity":1,"message":"408","line":23,"column":25,"nodeType":"359","messageId":"360","endLine":23,"endColumn":39},{"ruleId":"368","severity":1,"message":"391","line":98,"column":6,"nodeType":"370","endLine":98,"endColumn":50,"suggestions":"409"},{"ruleId":"357","severity":1,"message":"410","line":14,"column":10,"nodeType":"359","messageId":"360","endLine":14,"endColumn":20},{"ruleId":"357","severity":1,"message":"411","line":14,"column":22,"nodeType":"359","messageId":"360","endLine":14,"endColumn":26},{"ruleId":"357","severity":1,"message":"412","line":14,"column":28,"nodeType":"359","messageId":"360","endLine":14,"endColumn":36},{"ruleId":"357","severity":1,"message":"413","line":15,"column":10,"nodeType":"359","messageId":"360","endLine":15,"endColumn":13},{"ruleId":"357","severity":1,"message":"414","line":15,"column":15,"nodeType":"359","messageId":"360","endLine":15,"endColumn":25},{"ruleId":"357","severity":1,"message":"415","line":15,"column":27,"nodeType":"359","messageId":"360","endLine":15,"endColumn":37},{"ruleId":"357","severity":1,"message":"416","line":15,"column":39,"nodeType":"359","messageId":"360","endLine":15,"endColumn":47},{"ruleId":"357","severity":1,"message":"403","line":21,"column":12,"nodeType":"359","messageId":"360","endLine":21,"endColumn":17},{"ruleId":"357","severity":1,"message":"404","line":21,"column":19,"nodeType":"359","messageId":"360","endLine":21,"endColumn":27},{"ruleId":"357","severity":1,"message":"405","line":22,"column":12,"nodeType":"359","messageId":"360","endLine":22,"endColumn":18},{"ruleId":"357","severity":1,"message":"406","line":22,"column":20,"nodeType":"359","messageId":"360","endLine":22,"endColumn":29},{"ruleId":"368","severity":1,"message":"391","line":70,"column":8,"nodeType":"370","endLine":70,"endColumn":40,"suggestions":"417"},{"ruleId":"368","severity":1,"message":"391","line":66,"column":8,"nodeType":"370","endLine":66,"endColumn":26,"suggestions":"418"},{"ruleId":"368","severity":1,"message":"391","line":77,"column":8,"nodeType":"370","endLine":77,"endColumn":35,"suggestions":"419"},{"ruleId":"357","severity":1,"message":"402","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":15},{"ruleId":"357","severity":1,"message":"420","line":13,"column":8,"nodeType":"359","messageId":"360","endLine":13,"endColumn":13},{"ruleId":"368","severity":1,"message":"421","line":63,"column":8,"nodeType":"370","endLine":63,"endColumn":27,"suggestions":"422"},{"ruleId":"357","severity":1,"message":"402","line":5,"column":10,"nodeType":"359","messageId":"360","endLine":5,"endColumn":15},{"ruleId":"357","severity":1,"message":"367","line":15,"column":12,"nodeType":"359","messageId":"360","endLine":15,"endColumn":19},{"ruleId":"368","severity":1,"message":"423","line":69,"column":8,"nodeType":"370","endLine":69,"endColumn":36,"suggestions":"424"},{"ruleId":"357","severity":1,"message":"425","line":5,"column":8,"nodeType":"359","messageId":"360","endLine":5,"endColumn":14},{"ruleId":"357","severity":1,"message":"426","line":20,"column":12,"nodeType":"359","messageId":"360","endLine":20,"endColumn":16},{"ruleId":"357","severity":1,"message":"366","line":20,"column":18,"nodeType":"359","messageId":"360","endLine":20,"endColumn":25},{"ruleId":"368","severity":1,"message":"427","line":82,"column":8,"nodeType":"370","endLine":82,"endColumn":50,"suggestions":"428"},{"ruleId":"429","severity":1,"message":"430","line":8,"column":9,"nodeType":"378","endLine":13,"endColumn":11},{"ruleId":"393","severity":1,"message":"395","line":16,"column":13,"nodeType":"378","endLine":16,"endColumn":24},{"ruleId":"357","severity":1,"message":"362","line":10,"column":12,"nodeType":"359","messageId":"360","endLine":10,"endColumn":17},{"ruleId":"357","severity":1,"message":"425","line":4,"column":8,"nodeType":"359","messageId":"360","endLine":4,"endColumn":14},{"ruleId":"357","severity":1,"message":"367","line":10,"column":12,"nodeType":"359","messageId":"360","endLine":10,"endColumn":19},{"ruleId":"357","severity":1,"message":"386","line":10,"column":21,"nodeType":"359","messageId":"360","endLine":10,"endColumn":31},{"ruleId":"357","severity":1,"message":"362","line":11,"column":12,"nodeType":"359","messageId":"360","endLine":11,"endColumn":17},{"ruleId":"357","severity":1,"message":"362","line":20,"column":12,"nodeType":"359","messageId":"360","endLine":20,"endColumn":17},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["431"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'loadUser' is assigned a value but never used.","'data' is assigned a value but never used.","'setUser' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'error' and 'isAuthenticated'. Either include them or remove the dependency array.","ArrayExpression",["432"],"Unexpected whitespace before property isAuthenticated.","MemberExpression","unexpectedWhitespace",{"range":"433","text":"434"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",[],[],[],["431"],[],[],"'getUser' is defined but never used.","'setLoading' is assigned a value but never used.","'notify' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'redirect'. Either include them or remove the dependency array.",["435"],"'isUpdated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["436"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useParams' is defined but never used.","'useEffect' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'setIsAuthenticated' is assigned a value but never used.","'product' is assigned a value but never used.",["437"],"'toast' is defined but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'orders' is assigned a value but never used.","'setOrders' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'setTotalAmount' is assigned a value but never used.",["438"],"'ProSidebar' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Box' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'useTheme' is defined but never used.",["439"],["440"],["441"],"'Toast' is defined but never used.","React Hook useEffect has missing dependencies: 'listUsers' and 'navigate'. Either include them or remove the dependency array.",["442"],"React Hook useEffect has missing dependencies: 'getUserDetails' and 'navigate'. Either include them or remove the dependency array.",["443"],"'Loader' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProductReviews'. Either include it or remove the dependency array.",["444"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-object-constructor",{"desc":"445","fix":"446"},[899,901],".",{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"449","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},"Update the dependencies array to be: [error, error.isAuthenticated, isAuthenticated, navigate]",{"range":"466","text":"467"},"Update the dependencies array to be: [navigate, redirect]",{"range":"468","text":"469"},"Update the dependencies array to be: [error, navigate, success]",{"range":"470","text":"471"},{"range":"472","text":"471"},"Update the dependencies array to be: [error, isUpdated, updateError, product, id, navigate]",{"range":"473","text":"474"},"Update the dependencies array to be: [error, deleteError, isDeleted, navigate]",{"range":"475","text":"476"},"Update the dependencies array to be: [error, isDeleted, navigate]",{"range":"477","text":"478"},"Update the dependencies array to be: [error, isUpdated, navigate, orderId]",{"range":"479","text":"480"},"Update the dependencies array to be: [error, isDeleted, listUsers, navigate]",{"range":"481","text":"482"},"Update the dependencies array to be: [error, isUpdated, id, user, getUserDetails, navigate]",{"range":"483","text":"484"},"Update the dependencies array to be: [error, productId, isDeleted, deleteError, getProductReviews]",{"range":"485","text":"486"},[893,927],"[error, error.isAuthenticated, isAuthenticated, navigate]",[1722,1724],"[navigate, redirect]",[1407,1424],"[error, navigate, success]",[3259,3276],[2917,2961],"[error, isUpdated, updateError, product, id, navigate]",[2142,2174],"[error, deleteError, isDeleted, navigate]",[2287,2305],"[error, isDeleted, navigate]",[2512,2539],"[error, isUpdated, navigate, orderId]",[1886,1905],"[error, isDeleted, listUsers, navigate]",[2224,2252],"[error, isUpdated, id, user, getUserDetails, navigate]",[2433,2475],"[error, productId, isDeleted, deleteError, getProductReviews]"]